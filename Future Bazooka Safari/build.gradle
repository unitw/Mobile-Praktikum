/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'benjamin.wolf' at '02.03.16 11:24' with Gradle 2.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply Javafx Plugin for Gradle
apply from: 'http://dl.bintray.com/content/shemnon/javafx-gradle/javafx.plugin'

javafx {
    // appID 'FBS'
    appName 'Future Bazooka Safari'
    mainClass 'com.JFS.futurebazookasafari.JamaicanFashionSisters'

    signingMode 'debug'
}
*/

// Declares binary plugin and its required JavaFX classpath
apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin"

// Configures plugin
javafx {
    // Points to JDK and its JavaFX libraries, also declares target runtime JDK
    javaRuntime = '/Library/Java/JavaVirtualMachines/jdk1.8.0_73.jdk'
    
    // Application name and ID presented by target OS
    appID 'HelloWorldApp'
    appName 'Hello World Application'
    
    // Main class of application
    mainClass 'helloworld.HelloWorld'
    
    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching':'true']
    arguments = ['-l', '--fast']

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
    debugKey {
        alias = 'debug'
        keyPass = getProjectProperty('keyStorePassword')
        keyStore = file("/Users/user/Documents/development/NetBeansProjects/Mobile-Praktikum/Future Bazooka Safari/keystore.jks")
        storePass = getProjectProperty('storePassword')
    }
    
    signingMode 'debug'
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}